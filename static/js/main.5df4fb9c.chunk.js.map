{"version":3,"sources":["api/api.js","api/movies/movies.js","components/MoviesProvider/MoviesProvider.js","components/SearchForm/SearchForm.js","components/Header/Header.js","components/Main/MovieList/MovieNavBar/MovieNavBar.js","components/Main/MovieList/MovieItem/MovieItem.js","helpers/cutString.js","components/Main/MovieList/MovieList.js","components/Main/Main.js","components/Footer/Footer.js","components/Main/MovieList/Movie/Movie.js","App.js","serviceWorker.js","index.js","components/Main/MovieList/MovieItem/camera.png","mainbg.jpg"],"names":["api","axios","create","baseURL","process","interceptors","request","use","config","params","api_key","TMDB_IMAGE_URL","transformMovie","movie","poster_path","backdrop_path","fetchMovies","get","then","data","results","forEach","catch","error","fetchGenres","genres","reduce","genre","id","name","initialValues","query","page","language","include_adult","MoviesContext","React","createContext","MoviesProvider","children","useState","filter","setFilter","totalPages","setTotalPages","totalResults","setTotalResults","movies","setMovies","setGenres","setMovie","firstSearch","setError","searchMovies","newFilter","length","moviesApi","response","total_pages","total_results","providerValue","changePage","event","useEffect","searchGenres","Provider","value","useStyles","makeStyles","form","display","width","margin","input","backgroundColor","button","marginLeft","height","SearchForm","setValue","useContext","classes","Grid","container","spacing","className","onSubmit","preventDefault","item","xs","TextField","fullWidth","autoComplete","label","color","variant","size","onChange","target","lg","Button","type","headline","paddingTop","Header","Paper","elevation","Container","Typography","component","align","Link","underline","href","pagination","paddingBottom","MovieNavBar","Pagination","count","shape","root","media","backgroundSize","maxWidth","content","flexGrow","MovieItem","isFailMedia","setIsFailMedia","to","Card","square","CardMedia","src","errorImage","onError","CardContent","gutterBottom","title","release_date","Date","getFullYear","genre_ids","map","join","overview","string","maxLength","tail","substring","cutString","main","backgroundImage","mainBgImage","backgroundPosition","minHeight","clean","background","MovieList","md","sm","key","justify","Main","footer","link","alignItems","justifyContent","padding","Footer","marginBottom","Movie","useParams","currenMovie","film","Number","popularity","vote_count","vote_average","original_title","original_language","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.5df4fb9c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_TMDB_API_URL\n});\n\napi.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params.api_key = process.env.REACT_APP_TMDB_API_KEY;\n\n  return config;\n});\n","import { api } from '../api';\n\nconst TMDB_IMAGE_URL = process.env.REACT_APP_TMDB_IMAGE_URL;\n\nconst transformMovie = (movie) => {\n  movie.poster_path = TMDB_IMAGE_URL + movie.poster_path;\n  movie.backdrop_path = TMDB_IMAGE_URL + movie.backdrop_path;\n};\n\nconst transformGenres = (genres) => {\n  return genres.reduce((genres, genre) => ({ ...genres, [genre.id]: genre.name }), {});\n};\n\nexport const fetchMovies = (config) => {\n  return api.get('/search/movie', config)\n    .then(({ data }) => {\n      data.results.forEach(transformMovie);\n\n      return data;\n    })\n    .catch((error) => { throw error.data });\n};\n\nexport const fetchGenres = (config) => {\n  return api.get('/genre/movie/list?', config)\n    .then(({ data }) => transformGenres(data.genres))\n    .catch((error) => { throw error.data });\n};\n","import React, { useState, useEffect } from 'react';\nimport * as moviesApi from '../../api/movies';\n\nconst initialValues = {\n  filter: {\n    query: '',\n    page: 1,\n    language: 'ru-RU',\n    include_adult: false\n  }\n};\n\nexport const MoviesContext = React.createContext({});\n\nexport const MoviesProvider = ({ children }) => {\n  const [ filter, setFilter ] = useState(initialValues.filter);\n  const [ totalPages, setTotalPages ] = useState(0);\n  const [ totalResults, setTotalResults ] = useState(0);\n  const [ movies, setMovies ] = useState([]);\n  const [ genres, setGenres ] = useState([]);\n  const [ movie, setMovie ] = useState({});\n  const [ firstSearch, setFirstSearch ] = useState(false);\n  const [ error, setError ] = useState(false);\n\n  const searchMovies = (newFilter = {}) => {\n    if ( newFilter.query && newFilter.query.length <= 1) {\n      setMovies([]);\n      setTotalPages(0);\n      setTotalResults(0);\n\n      return;\n    }\n\n    moviesApi.fetchMovies({\n      params: {\n        ...filter, ...newFilter\n      }\n    })\n      .then(response => {\n        setTotalPages(response.total_pages);\n        setTotalResults(response.total_results);\n        setMovies(response.results);\n        setFilter((filter) => ({ ...filter, ...newFilter, page: response.page }));\n      })\n      .catch(error => setError(true));\n  };\n\n  const searchGenres = (filter = {}) => {\n    moviesApi.fetchGenres({\n      params: {\n        'language': 'ru-RU',\n        ...filter\n      }\n    })\n      .then(setGenres)\n      .catch(error => setError(true));\n  };\n\n  const changePage = (event, page) => {\n    searchMovies({ page });\n  };\n\n  const providerValue = {\n    filter,\n    totalPages,\n    totalResults,\n    movies,\n    genres,\n    movie,\n    firstSearch,\n    error,\n\n    // functions\n    searchMovies,\n    changePage,\n    setMovie\n  };\n\n  useEffect(() => {\n    searchGenres();\n  }, []);\n\n  return (\n    <MoviesContext.Provider value={providerValue}>\n      {children}\n    </MoviesContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport { MoviesContext } from '../MoviesProvider';\n\nconst useStyles = makeStyles({\n  form: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px 0 15px',\n  },\n  input: {\n    backgroundColor: 'white',\n  },\n  button: {\n    marginLeft: '10px',\n    height: '99%'\n  }\n});\n\nexport const SearchForm = () => {\n  const [ value, setValue ] = useState('');\n  const { searchMovies } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    searchMovies({ query: value });\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <form className={classes.form} onSubmit={submitForm}>\n        <Grid item xs={11}>\n          <TextField\n            className={classes.input}\n            fullWidth\n            autoComplete=\"off\"\n            label=\"Поиск фильма\"\n            name=\"film\"\n            color=\"primary\"\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            size=\"medium\"\n            value={value}\n            onChange={handleChange}\n          />\n        </Grid>\n\n        <Grid item lg={1}>\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" type=\"submit\">Поиск</Button>\n        </Grid>\n      </form>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Link, Paper, Typography } from '@material-ui/core';\nimport { SearchForm } from '../SearchForm';\n\nconst useStyles = makeStyles({\n  headline: {\n  paddingTop: '10px',\n  }\n});\n\nexport const Header = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={1}>\n      <Container>\n        <Typography variant=\"h6\" component=\"h1\" color=\"textPrimary\" align=\"center\" className={classes.headline}>\n          <Link color=\"primary\" underline=\"none\" href=\"/\">Movie Search Engine</Link>\n        </Typography>\n\n        <SearchForm />\n      </Container>\n    </Paper>\n  );\n};\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { MoviesContext } from '../../../MoviesProvider';\nimport './MovieNavBar.css';\n\nconst useStyles = makeStyles({\n  pagination: {\n    paddingBottom: '10px'\n  }\n});\n\nexport const MovieNavBar = () => {\n  const { filter, totalPages, totalResults, changePage } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\n        Найдено {totalResults} результатов\n      </Typography>\n\n      <Pagination\n        className={classes.pagination}\n        page={filter.page}\n        count={totalPages}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={changePage}\n      />\n    </Container>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport { cutString } from '../../../../helpers/cutString';\nimport { MoviesContext } from '../../../MoviesProvider';\nimport errorImage from './camera.png';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n  media: {\n    backgroundSize: 'contain',\n    height: '320px',\n    maxWidth: '250px',\n    margin: '20px auto 0'\n  },\n  content: {\n    flexGrow: 1\n  }\n});\n\nexport const MovieItem = ({ movie }) => {\n  const [ isFailMedia, setIsFailMedia ] = useState(false);\n  const { genres } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  const handleMediaError = () => {\n    setIsFailMedia(true);\n  };\n\n  return (\n    <Link to={\"/movie/\"+movie.id}>\n      <Card className={classes.root} variant=\"outlined\" square>\n        <CardMedia\n          className={classes.media}\n          src={isFailMedia ? errorImage : movie.backdrop_path || movie.poster_path}\n          component=\"img\"\n          onError={handleMediaError}\n        />\n\n        <CardContent className={classes.content}>\n          <Typography gutterBottom variant=\"h5\" color=\"textPrimary\" component=\"h2\">\n            {movie.title} {movie.release_date && `(${new Date(movie.release_date).getFullYear()})`}\n          </Typography>\n\n          {movie.genre_ids.length > 0 &&\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n              <b>Жанр: </b>{movie.genre_ids.map((id) => genres[id]).join(', ')}\n            </Typography>\n          }\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {movie.overview.length > 0 ? cutString(movie.overview, 100) : \"К сожалению, обзор фильма на русском языке отсутствует.\"}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n};\n","export const cutString = (string, maxLength, tail = '...') => {\n  return string.length > maxLength ? string.substring(0, maxLength) + tail : string;\n};\n\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport { MoviesContext } from '../../MoviesProvider';\nimport { MovieNavBar } from './MovieNavBar';\nimport { MovieItem } from './MovieItem';\nimport mainBgImage from '../../../mainbg.jpg';\n\nconst useStyles = makeStyles({\n  main: {\n    backgroundImage: `url(${mainBgImage})`,\n    backgroundPosition: 'center',\n    minHeight: '500px'\n  },\n  clean: {\n    background: 'none',\n    minHeight: '500px',\n    margin: '20px'\n  }\n});\n\nexport const MovieList = () => {\n  const { movies, totalResults } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.clean}>\n      <Container>\n        {totalResults > 0 ?\n          <div>\n            <MovieNavBar/>\n\n            <Grid container spacing={4}>\n              {movies.map(movie =>\n                <Grid item lg={3} md={4} sm={6} key={movie.id}>\n                  <MovieItem movie={movie}/>\n                </Grid>\n              )}\n            </Grid>\n          </div>\n        :\n          <div>\n            <Typography align=\"center\" color=\"error\" variant=\"subtitle1\" justify=\"center\" component=\"p\">\n              По данному запросу ничего не найдено\n            </Typography>\n          </div>\n        }\n      </Container>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport 'typeface-roboto';\nimport { Typography } from '@material-ui/core';\nimport { MoviesContext } from '../MoviesProvider';\nimport { MovieList } from './MovieList';\n\nexport const Main = () => {\n  const { movies, error } = useContext(MoviesContext);\n\n  return (\n    <div>\n      {movies ?\n        <MovieList />\n      :\n        error && <Typography align=\"center\" color=\"error\" variant=\"subtitle1\" justify=\"center\" component=\"p\">Movies can't be loaded on this page</Typography>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Link, Paper, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  footer: {\n    backgroundColor: 'black',\n    minHeight: '30px',\n    color: 'white'\n  },\n  link: {\n    color: 'white',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '10px'\n  }\n});\n\nexport function Footer() {\n  const classes = useStyles();\n\n  return (\n    <Paper variant=\"outlined\" square className={classes.footer}>\n      <Container>\n        <Typography variant=\"h6\" component=\"p\" align=\"center\" >\n          <Link underline=\"none\" href=\"/\" className={classes.link}>Movie Search Engine. Copyright 2020</Link>\n        </Typography>\n      </Container>\n    </Paper>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Container, Card, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MoviesContext, MoviesProvider } from '../../../MoviesProvider';\nimport errorImage from '../MovieItem/camera.png';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    margin: '10px 0 0'\n  },\n  media: {\n    backgroundSize: 'contain',\n    height: '300px',\n    maxWidth: '200px',\n    margin: '20px auto'\n  },\n  content: {\n    flexGrow: 1,\n    width: '100%'\n  },\n  overview: {\n    marginBottom: '20px'\n  }\n});\n\nexport const Movie = () => {\n  let { id } = useParams();\n  const { movies, genres } = useContext(MoviesContext);\n  const [ isFailMedia, setIsFailMedia ] = useState(false);\n  const moviesResult = movies.filter(film => Number(film.id) === Number(id));\n  const currenMovie = moviesResult[0];\n  const classes = useStyles();\n\n  const handleMediaError = () => {\n    setIsFailMedia(true);\n  };\n\n  return (\n    <MoviesProvider>\n      <Container>\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            src={isFailMedia ? errorImage : currenMovie.backdrop_path || currenMovie.poster_path}\n            component=\"img\"\n            onError={handleMediaError}\n          />\n          <CardContent>\n            <Typography variant=\"h4\" color=\"textPrimary\" component=\"h3\" className={classes.overview}>\n              {currenMovie.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Популярность: </b>{currenMovie.popularity} ({currenMovie.vote_count} / {currenMovie.vote_average})\n            </Typography>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Дата релиза: </b>{currenMovie.release_date}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Оригинальное названиe: </b>{currenMovie.original_title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Язык оригинала: </b>{currenMovie.original_language ? \"английский\" : currenMovie.original_language}\n            </Typography>\n            {currenMovie.genre_ids.length > 0 &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" className={classes.overview}>\n              <b>Жанр: </b>{currenMovie.genre_ids.map((id) => genres[id]).join(', ')}\n            </Typography>\n            }\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Обзор: </b>{currenMovie.overview.length > 0 ? currenMovie.overview : \"К сожалению, обзор фильма на русском языке отсутствует.\"}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Container>\n    </MoviesProvider>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'typeface-roboto';\nimport { MoviesProvider } from './components/MoviesProvider';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\nimport { Footer } from './components/Footer';\nimport { Movie } from './components/Main/MovieList/Movie';\nimport './App.css';\n\nexport const App = () => {\n  return (\n\n      <MoviesProvider>\n        <Header />\n        <Router>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/movie/:id\" component={Movie} />\n        </Router>\n        <Footer />\n      </MoviesProvider>\n\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/camera.c73a1804.png\";","module.exports = __webpack_public_path__ + \"static/media/mainbg.843e1bb9.jpg\";"],"sourceRoot":""}