{"version":3,"sources":["api/api.js","api/movies/movies.js","components/MoviesProvider/MoviesProvider.js","components/SearchForm/SearchForm.js","components/Header/Header.js","components/Main/MovieList/MovieNavBar/MovieNavBar.js","components/Main/MovieList/MovieItem/MovieItem.js","helpers/cutString.js","components/Loader/Loader.js","components/Main/MovieList/MovieList.js","components/Main/Main.js","components/Footer/Footer.js","helpers/convertDate.js","components/Movie/Movie.js","App.js","serviceWorker.js","index.js","components/Main/MovieList/MovieItem/camera.png","mainbg.jpg"],"names":["api","axios","create","baseURL","process","interceptors","request","use","config","params","api_key","language","TMDB_IMAGE_URL","transformMovie","movie","poster_path","backdrop_path","fetchMovies","get","then","data","results","forEach","catch","error","fetchGenres","genres","reduce","genre","id","name","initialValues","query","page","include_adult","MoviesContext","React","createContext","MoviesProvider","children","useState","filter","setFilter","totalPages","setTotalPages","totalResults","setTotalResults","movies","setMovies","setGenres","setError","isLoading","setLoading","searchMovies","newFilter","length","loadingSpinner","moviesApi","response","total_pages","total_results","providerValue","changePage","event","useEffect","searchGenres","Provider","value","useStyles","makeStyles","form","display","width","margin","input","backgroundColor","button","marginLeft","height","SearchForm","setValue","useContext","classes","Grid","container","spacing","className","onSubmit","preventDefault","item","xs","TextField","fullWidth","autoComplete","label","color","variant","size","onChange","target","lg","Button","type","headline","paddingTop","Header","Paper","elevation","Container","Typography","component","align","Link","underline","href","pagination","paddingBottom","MovieNavBar","Pagination","count","shape","link","textDecoration","root","media","backgroundSize","maxWidth","content","flexGrow","MovieItem","isFailMedia","setIsFailMedia","to","Card","square","CardMedia","src","errorImage","onError","CardContent","gutterBottom","title","release_date","Date","getFullYear","genre_ids","map","join","overview","string","maxLength","tail","substring","cutString","styles","spinner","Loader","style","CircularProgress","thikness","main","backgroundImage","mainBgImage","backgroundPosition","minHeight","clean","background","MovieList","md","sm","key","Main","justify","footer","alignItems","justifyContent","padding","Footer","boxShadow","marginTop","Movie","digit","useParams","setCurrentMovie","handleMediaError","searchSingleMovie","belongs_to_collection","popularity","vote_count","vote_average","budget","String","replace","date","arr","split","monthNames","number","month","convertDate","original_title","homepage","rel","original_language","production_companies","array","result","company","origin_country","slice","transformCompanies","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.af0d2b4d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_TMDB_API_URL\n});\n\napi.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params.api_key = process.env.REACT_APP_TMDB_API_KEY;\n  config.params.language = 'ru-RU';\n\n  return config;\n});\n","import { api } from '../api';\nimport * as moviesApi from './index';\n\nconst TMDB_IMAGE_URL = process.env.REACT_APP_TMDB_IMAGE_URL;\n\nexport const transformMovie = (movie) => {\n  movie.poster_path = movie.poster_path && TMDB_IMAGE_URL + movie.poster_path;\n  movie.backdrop_path = movie.backdrop_path && TMDB_IMAGE_URL + movie.backdrop_path;\n};\n\nconst transformGenres = (genres) => {\n  return genres.reduce((genres, genre) => ({ ...genres, [genre.id]: genre.name }), {});\n};\n\nexport const fetchMovies = (config) => {\n  return api.get('/search/movie', config)\n    .then(({ data }) => {\n      data.results.forEach(transformMovie);\n\n      return data;\n    })\n    .catch((error) => { throw error.data });\n};\n\nexport const fetchSingleMovie = (id, config) => {\n  return api.get('/movie/' + id, config)\n    .then(data => {\n      transformMovie(data.data);\n\n      if (data.data.belongs_to_collection) {\n        moviesApi.transformMovie(data.data.belongs_to_collection);\n      }\n\n      return data;\n    })\n    .catch((error) => { throw error.data });\n};\n\nexport const fetchGenres = (config) => {\n  return api.get('/genre/movie/list', config)\n    .then(({ data }) => transformGenres(data.genres))\n    .catch((error) => { throw error.data });\n};\n","import React, { useState, useEffect } from 'react';\nimport * as moviesApi from '../../api/movies';\n\nconst initialValues = {\n  filter: {\n    query: '',\n    page: 1,\n    include_adult: false\n  }\n};\n\nexport const MoviesContext = React.createContext({});\n\nexport const MoviesProvider = ({ children }) => {\n  const [ filter, setFilter ] = useState(initialValues.filter);\n  const [ totalPages, setTotalPages ] = useState(0);\n  const [ totalResults, setTotalResults ] = useState(0);\n  const [ movies, setMovies ] = useState([]);\n  const [ genres, setGenres ] = useState([]);\n  const [ error, setError ] = useState(false);\n  const [ isLoading, setLoading ] = useState(false);\n\n  const searchMovies = (newFilter = {}) => {\n    if (newFilter.query && newFilter.query.length <= 1) {\n      setMovies([]);\n      setTotalPages(0);\n      setTotalResults(0);\n\n      return;\n    }\n\n    const loadingSpinner = (setLoading(true), () => {\n      moviesApi.fetchMovies({\n        params: {\n          ...filter, ...newFilter\n        }\n      })\n        .then(response => {\n          setLoading(false);\n          setTotalPages(response.total_pages);\n          setTotalResults(response.total_results);\n          setMovies(response.results);\n          setFilter((filter) => ({ ...filter, ...newFilter, page: response.page }));\n        })\n        .catch(error => setError(true));\n    });\n\n    loadingSpinner();\n};\n\n  const searchGenres = (filter = {}) => {\n    moviesApi.fetchGenres({\n      params: {\n        ...filter\n      }\n    })\n    .then(setGenres)\n    .catch(error => setError(true));\n  };\n\n  const changePage = (event, page) => {\n    searchMovies({ page });\n  };\n\n  const providerValue = {\n    filter,\n    totalPages,\n    totalResults,\n    movies,\n    genres,\n    error,\n    isLoading,\n\n    // functions\n    searchMovies,\n    changePage,\n    setLoading\n  };\n\n  useEffect(() => {\n    searchGenres();\n  }, []);\n\n  return (\n    <MoviesContext.Provider value={providerValue}>\n      {children}\n    </MoviesContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport { MoviesContext } from '../MoviesProvider';\n\nconst useStyles = makeStyles({\n  form: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px 0 15px',\n  },\n  input: {\n    backgroundColor: 'white',\n  },\n  button: {\n    marginLeft: '10px',\n    height: '99%'\n  }\n});\n\nexport const SearchForm = () => {\n  const [ value, setValue ] = useState('');\n  const { searchMovies } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    searchMovies({ query: value });\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <form className={classes.form} onSubmit={submitForm}>\n        <Grid item xs={11}>\n          <TextField\n            className={classes.input}\n            fullWidth\n            autoComplete=\"off\"\n            label=\"Поиск фильма\"\n            name=\"film\"\n            color=\"primary\"\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            size=\"medium\"\n            value={value}\n            onChange={handleChange}\n          />\n        </Grid>\n\n        <Grid item lg={1}>\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" type=\"submit\">Поиск</Button>\n        </Grid>\n      </form>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Link, Paper, Typography } from '@material-ui/core';\nimport { SearchForm } from '../SearchForm';\n\nconst useStyles = makeStyles({\n  headline: {\n  paddingTop: '10px',\n  }\n});\n\nexport const Header = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={1}>\n      <Container>\n        <Typography variant=\"h6\" component=\"h1\" color=\"textPrimary\" align=\"center\" className={classes.headline}>\n          <Link color=\"primary\" underline=\"none\" href=\"/\">Movie Search Engine</Link>\n        </Typography>\n\n        <SearchForm />\n      </Container>\n    </Paper>\n  );\n};\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { MoviesContext } from '../../../MoviesProvider';\nimport './MovieNavBar.css';\n\nconst useStyles = makeStyles({\n  pagination: {\n    paddingBottom: '10px'\n  }\n});\n\nexport const MovieNavBar = () => {\n  const { filter, totalPages, totalResults, changePage } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\n        Найдено {totalResults} результатов\n      </Typography>\n\n      <Pagination\n        className={classes.pagination}\n        page={filter.page}\n        count={totalPages}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={changePage}\n      />\n    </Container>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport { cutString } from '../../../../helpers/cutString';\nimport { MoviesContext } from '../../../MoviesProvider';\nimport errorImage from './camera.png';\n\nconst useStyles = makeStyles({\n  link: {\n    textDecoration: 'none',\n  },\n  root: {\n    height: '100%',\n  },\n  media: {\n    backgroundSize: 'contain',\n    height: '320px',\n    maxWidth: '250px',\n    margin: '20px auto 0'\n  },\n  content: {\n    flexGrow: 1\n  }\n});\n\nexport const MovieItem = ({ movie }) => {\n  const [ isFailMedia, setIsFailMedia ] = useState(false);\n  const { genres } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  const handleMediaError = () => {\n    setIsFailMedia(true);\n  };\n\n  return (\n    <Link to={'/movie/' + movie.id} className={classes.link}>\n      <Card className={classes.root} variant=\"outlined\" square>\n        <CardMedia\n          className={classes.media}\n          src={isFailMedia ? errorImage : movie.backdrop_path || movie.poster_path || errorImage}\n          component=\"img\"\n          onError={handleMediaError}\n        />\n\n        <CardContent className={classes.content}>\n          <Typography gutterBottom variant=\"h5\" color=\"textPrimary\" component=\"h2\">\n            {movie.title} {movie.release_date && `(${new Date(movie.release_date).getFullYear()})`}\n          </Typography>\n\n          {movie.genre_ids.length > 0 &&\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n              <b>Жанр: </b>{movie.genre_ids.map((id) => genres[id]).join(', ')}\n            </Typography>\n          }\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {movie.overview.length > 0 ? cutString(movie.overview, 100) : \"К сожалению, обзор фильма на русском языке отсутствует.\"}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n};\n","export const cutString = (string, maxLength, tail = '...') => {\n  return string.length > maxLength ? string.substring(0, maxLength) + tail : string;\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  container: {\n    width: '100%'\n  },\n  spinner: {\n    margin: '24px auto',\n    display: 'block'\n  }\n};\n\nexport const Loader = () => {\n  return (\n    <div style={styles.container}>\n      <CircularProgress style={styles.spinner} size={68} thikness={5} />\n    </div>\n  )\n};\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid } from '@material-ui/core';\nimport { MoviesContext } from '../../MoviesProvider';\nimport { MovieNavBar } from './MovieNavBar';\nimport { MovieItem } from './MovieItem';\nimport { Loader } from '../../Loader';\nimport mainBgImage from '../../../mainbg.jpg';\n\nconst useStyles = makeStyles({\n  main: {\n    backgroundImage: `url(${mainBgImage})`,\n    backgroundPosition: 'center',\n    minHeight: '500px'\n  },\n  clean: {\n    background: 'none',\n    minHeight: '500px',\n    margin: '20px'\n  }\n});\n\nexport const MovieList = () => {\n  const { movies, totalResults, isLoading } = useContext(MoviesContext);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.clean}>\n      <Container>\n        {isLoading ?\n          <Loader/>\n        :\n          <div>\n            <MovieNavBar/>\n            <Grid container spacing={4}>\n              {movies.map(movie =>\n                <Grid item lg={3} md={4} sm={6} key={movie.id}>\n                  <MovieItem movie={movie}/>\n                </Grid>\n              )}\n            </Grid>\n          </div>\n        }\n      </Container>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport 'typeface-roboto';\nimport { Typography } from '@material-ui/core';\nimport { MoviesContext } from '../MoviesProvider';\nimport { MovieList } from './MovieList';\n\nexport const Main = () => {\n  const { movies, error } = useContext(MoviesContext);\n\n  return (\n    <div>\n      {movies ?\n        <MovieList />\n      :\n        error && <Typography align=\"center\" color=\"error\" variant=\"subtitle1\" justify=\"center\" component=\"p\">Movies can't be loaded on this page</Typography>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Link, Paper, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  footer: {\n    backgroundColor: 'black',\n    minHeight: '30px',\n    color: 'white'\n  },\n  link: {\n    color: 'white',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '10px'\n  }\n});\n\nexport function Footer() {\n  const classes = useStyles();\n\n  return (\n    <Paper variant=\"outlined\" square className={classes.footer}>\n      <Container>\n        <Typography variant=\"h6\" component=\"p\" align=\"center\" >\n          <Link underline=\"none\" href=\"/\" className={classes.link}>Movie Search Engine. Copyright 2020</Link>\n        </Typography>\n      </Container>\n    </Paper>\n  );\n};\n","export const convertDate = (date) => {\n  const monthes = [\n    {\n      number: '01',\n      name: 'января',\n    },\n    {\n      number: '02',\n      name: 'февраля',\n    },\n    {\n      number: '03',\n      name: 'марта',\n    },\n    {\n      number: '04',\n      name: 'апреля',\n    },\n    {\n      number: '05',\n      name: 'мая',\n    },\n    {\n      number: '06',\n      name: 'июня',\n    },\n    {\n      number: '07',\n      name: 'июля',\n    },\n    {\n      number: '08',\n      name: 'августа',\n    },\n    {\n      number: '09',\n      name: 'сентября',\n    },\n    {\n      number: '10',\n      name: 'октября',\n    },\n    {\n      number: '11',\n      name: 'ноября',\n    },\n    {\n      number: '12',\n      name: 'декабря',\n    }\n  ];\n  const arr = date.split('-');\n  const monthNames = monthes.filter(month => month.number === arr[1]);\n\n  return arr[2] + ' ' + monthNames[0].name + ' ' + arr[0] + ' г.';\n};\n","import React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { convertDate } from '../../helpers/convertDate';\nimport * as moviesApi from '../../api/movies/index';\nimport errorImage from '../Main/MovieList/MovieItem/camera.png';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    margin: '10px 0 0',\n    boxShadow: 'none'\n  },\n  media: {\n    backgroundSize: 'contain',\n    height: '300px',\n    maxWidth: '200px',\n    margin: '20px auto'\n  },\n  content: {\n    flexGrow: 1,\n    width: '100%'\n  },\n  overview: {\n    marginTop: '20px'\n  }\n});\n\nexport const Movie = () => {\n  const { id } = useParams();\n  const [ isFailMedia, setIsFailMedia ] = useState(false);\n  const [ movie, setCurrentMovie ] = useState({});\n  const [ error, setError ] = useState(false);\n  const classes = useStyles();\n\n  const handleMediaError = () => {\n    setIsFailMedia(true);\n  };\n\n  const separateDigit = (digit) => {\n    return (String(digit).replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 '));\n  };\n\n  const transformCompanies = (array) => {\n    let result = '';\n\n    array.production_companies.map(company => {\n      company.origin_country.length > 0 ?\n        result = result + company.name + `(${company.origin_country}), `\n      :\n        result = result + company.name + ', ';\n\n      return result;\n    });\n\n    return result.slice(0,-2);\n  };\n\n  const searchSingleMovie = (id) => {\n    moviesApi.fetchSingleMovie(id)\n      .then(response => setCurrentMovie(response.data))\n      .catch(error => setError(true));\n  };\n\n  useEffect(() => {\n    searchSingleMovie(id);\n  }, [id]);\n\n  return (\n    <Container>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          src={isFailMedia ? errorImage : movie.backdrop_path || movie.poster_path || errorImage}\n          component=\"img\"\n          onError={handleMediaError}\n        />\n\n        <CardContent className={classes.content}>\n          <Typography variant=\"h4\" color=\"textPrimary\" component=\"h3\" className={classes.overview}>\n            {movie.title}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n            <b>Популярность: </b>{movie.popularity} ({movie.vote_count} / {movie.vote_average})\n          </Typography>\n\n          {!!movie.budget &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Бюджет: </b> ${separateDigit(movie.budget)}\n            </Typography>\n          }\n\n          {movie.release_date &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Дата релиза: </b>{convertDate(movie.release_date)}\n            </Typography>\n          }\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n            <b>Оригинальное названиe: </b>{movie.original_title} {movie.homepage && <a href={movie.homepage} target=\"_blank\" rel=\"noopener noreferrer\">перейти на сайт</a>}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n            <b>Язык оригинала: </b>{movie.original_language==='en' ? \"английский\" : movie.original_language}\n          </Typography>\n\n          {movie.belongs_to_collection && movie.belongs_to_collection.name &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Коллекция: </b>{movie.belongs_to_collection.name}\n            </Typography>\n          }\n\n          {movie.genres && movie.genres.length > 0 &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Жанр: </b>{movie.genres.map((genre) => genre.name).join(', ')}\n            </Typography>\n          }\n\n          {movie.overview && movie.overview.length > 0 &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" className={classes.overview}>\n              <b>Обзор: </b>{movie.overview}\n            </Typography>\n          }\n\n          {movie.production_companies && movie.production_companies.length > 0 &&\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <b>Кинокомпании: </b>{transformCompanies(movie)}\n            </Typography>\n          }\n        </CardContent>\n\n        {movie.belongs_to_collection &&\n          <CardMedia\n            className={classes.media}\n            src={isFailMedia ? errorImage : movie.belongs_to_collection.backdrop_path || movie.belongs_to_collection.poster_path || errorImage}\n            component=\"img\"\n            onError={handleMediaError}\n          />\n        }\n\n      </Card>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'typeface-roboto';\nimport { MoviesProvider } from './components/MoviesProvider';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\nimport { Footer } from './components/Footer';\nimport { Movie } from './components/Movie';\nimport './App.css';\n\nexport const App = () => {\n  return (\n    <MoviesProvider>\n      <Header />\n      <Router>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/movie-search-engine\" component={Main} />\n        <Route path=\"/movie/:id\" component={Movie} />\n      </Router>\n      <Footer />\n    </MoviesProvider>\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/camera.c73a1804.png\";","module.exports = __webpack_public_path__ + \"static/media/mainbg.843e1bb9.jpg\";"],"sourceRoot":""}