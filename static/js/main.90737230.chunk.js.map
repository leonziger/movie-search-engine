{"version":3,"sources":["components/SearchForm/SearchForm.js","components/Header/Header.js","components/MovieList/MovieNavBar/MovieNavBar.js","components/MovieList/MovieItem/MovieItem.js","components/MovieList/MovieList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","className","onSubmit","this","props","formSubmitHandler","type","name","placeholder","onClick","submitForm","React","Component","Header","AppBar","position","href","MovieNavBar","console","log","query","totalResults","pages","map","page","startPage","key","changePage","MovieItem","decodeGenres","array","cuttedItems","forEach","item","state","genres","element","id","ru_name","toLowerCase","slice","alt","src","movie","backdrop_path","poster_path","title","isNaN","release_date","Date","getFullYear","genre_ids","length","overview","MovieList","Container","currentPage","totalPages","movies","Footer","App","e","target","closest","children","value","searchMovies","preventDefault","clickedPage","activePage","document","querySelector","classList","remove","add","Number","innerText","setState","searchQuery","moviesArray","axios","get","params","then","films","data","catch","error","arr","i","total_pages","push","total_results","results","infoMessage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.90737230.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './SearchForm.css';\r\n\r\nclass SearchForm extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"search-form\" onSubmit={this.props.formSubmitHandler}>\r\n\r\n                <input\r\n                    className=\"search-form__input\"\r\n                    type=\"text\"\r\n                    name=\"film\"\r\n                    placeholder=\"Введите название фильма\"\r\n                />\r\n                <button className=\"navbar-button search-button\" onClick={this.props.submitForm}>Найти</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport './Header.css';\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <AppBar position=\"fixed\">\r\n                <div className=\"header\">\r\n                    <div className=\"container\">\r\n                        <a className=\"header-title\" href=\"/\">Movie Search Engine</a>\r\n                        <SearchForm\r\n                            formSubmitHandler={this.props.formSubmitHandler}\r\n                            submitForm={this.props.submitForm}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AppBar>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './MovieNavBar.css';\r\n\r\nclass MovieNavBar extends React.Component {\r\n\r\n    render() {\r\n        console.log('MovieNavBar = ',this.props);\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"movie-search-result\">По запросу \"{this.props.query}\" найдено {this.props.totalResults} результатов </div>\r\n                <div className=\"movie-navbar\">\r\n\r\n                        <span className=\"movie-navbar-title\">Страницы:</span> {\r\n                    this.props.pages.map(\r\n                        page =>\r\n                            page === this.props.startPage\r\n                            ?\r\n                                <div className=\"movie-navbar-page movie-navbar-page_active\" key={page}>{page}</div>\r\n                            :\r\n                                <div className=\"movie-navbar-page\" key={page} onClick={this.props.changePage}>{page}</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieNavBar;","import React from \"react\";\r\nimport './MovieItem.css';\r\n\r\nclass MovieItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genres : [\r\n                {\r\n                    \"id\": 28,\r\n                    \"name\": \"Action\",\r\n                    \"ru_name\": \"Экшн\"\r\n                },\r\n                {\r\n                    \"id\": 12,\r\n                    \"name\": \"Adventure\",\r\n                    \"ru_name\": \"Приключения\"\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"name\": \"Animation\",\r\n                    \"ru_name\": \"Анимация\"\r\n                },\r\n                {\r\n                    \"id\": 35,\r\n                    \"name\": \"Comedy\",\r\n                    \"ru_name\": \"Комедия\"\r\n                },\r\n                {\r\n                    \"id\": 80,\r\n                    \"name\": \"Crime\",\r\n                    \"ru_name\": \"Криминал\"\r\n                },\r\n                {\r\n                    \"id\": 99,\r\n                    \"name\": \"Documentary\",\r\n                    \"ru_name\": \"Документальный\"\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"name\": \"Drama\",\r\n                    \"ru_name\": \"Драма\"\r\n                },\r\n                {\r\n                    \"id\": 10751,\r\n                    \"name\": \"Family\",\r\n                    \"ru_name\": \"Семейный\"\r\n                },\r\n                {\r\n                    \"id\": 14,\r\n                    \"name\": \"Fantasy\",\r\n                    \"ru_name\": \"Фентези\"\r\n                },\r\n                {\r\n                    \"id\": 36,\r\n                    \"name\": \"History\",\r\n                    \"ru_name\": \"Исторический\"\r\n                },\r\n                {\r\n                    \"id\": 27,\r\n                    \"name\": \"Horror\",\r\n                    \"ru_name\": \"Ужасы\"\r\n                },\r\n                {\r\n                    \"id\": 10402,\r\n                    \"name\": \"Music\",\r\n                    \"ru_name\": \"Музыкальный\"\r\n                },\r\n                {\r\n                    \"id\": 9648,\r\n                    \"name\": \"Mystery\",\r\n                    \"ru_name\": \"Мистика\"\r\n                },\r\n                {\r\n                    \"id\": 10749,\r\n                    \"name\": \"Romance\",\r\n                    \"ru_name\": \"Романтический\"\r\n                },\r\n                {\r\n                    \"id\": 878,\r\n                    \"name\": \"Science Fiction\",\r\n                    \"ru_name\": \"Научная фантастика\"\r\n                },\r\n                {\r\n                    \"id\": 10770,\r\n                    \"name\": \"TV Movie\",\r\n                    \"ru_name\": \"телефильм\"\r\n                },\r\n                {\r\n                    \"id\": 53,\r\n                    \"name\": \"Thriller\",\r\n                    \"ru_name\": \"триллер\"\r\n                },\r\n                {\r\n                    \"id\": 10752,\r\n                    \"name\": \"War\",\r\n                    \"ru_name\": \"Военный\"\r\n                },\r\n                {\r\n                    \"id\": 37,\r\n                    \"name\": \"Western\",\r\n                    \"ru_name\": \"Вестерн\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    decodeGenres = (array) => {\r\n        let items = '', cuttedItems = '';\r\n        array.forEach((item) => {\r\n            this.state.genres.forEach((element)=>{\r\n                if (element.id === item ) {\r\n                    cuttedItems += element.ru_name.toLowerCase() + ', ';\r\n                }\r\n            });\r\n        });\r\n        items = cuttedItems.slice(0, -2);\r\n        return items;\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col-lg-3 col-md-4 col-sm-6 card\">\r\n\r\n                <div className=\"card-img\">\r\n                    <img\r\n                        className=\"card-img-top\"\r\n                        alt=\"\"\r\n                        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${this.props.movie.backdrop_path || this.props.movie.poster_path}`}\r\n                    />\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">{this.props.movie.title}\r\n                        { isNaN(this.props.movie.release_date) ? \" (\" + new Date(this.props.movie.release_date).getFullYear()+\")\" : '' }\r\n                    </div>\r\n                    {this.props.movie.genre_ids.length>0 ? <div className=\"card-genres\"><b>Жанр:&nbsp;</b>{this.decodeGenres(this.props.movie.genre_ids)}</div> : ''}\r\n                    <div className=\"card-overview\">{this.props.movie.overview}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport MovieNavBar from \"./MovieNavBar/MovieNavBar\";\r\nimport MovieItem from \"./MovieItem/MovieItem\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass MovieList extends React.Component {\r\n\r\n    render() {\r\n        console.log('MovieList = ',this.props);\r\n\r\n        return (\r\n            <Container>\r\n                {this.props.totalResults > 0\r\n                    ? <div>\r\n                        <MovieNavBar\r\n                            query={this.props.query}\r\n                            currentPage={this.props.startPage}\r\n                            totalPages={this.props.totalPages}\r\n                            totalResults={this.props.totalResults}\r\n                            pages={this.props.pages}\r\n                            changePage={this.props.changePage}\r\n                        />\r\n                        <div className=\"row\">\r\n                            {this.props.movies.map(movie =>\r\n                                <MovieItem key={movie.id} movie={movie}/>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"movie-search-nothing\">По данному запросу ничего не найдено</div>\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container footer-copy\">Movie Search Engine. Copyright 2020.</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport MovieList from './components/MovieList/MovieList';\nimport Footer from './components/Footer/Footer';\nimport axios from \"axios\";\nimport 'typeface-roboto';\n\n\nconst api_key = 'ee0f05a0f4bb56e4353f24db8f4f30ef';\nconst url_search = \"https://api.themoviedb.org/3/search/movie\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            query:'',\n            startPage: 1,\n            totalPages: 1,\n            totalResults: 0,\n            pages : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n            movies: []\n        }\n    }\n\n    formSubmitHandler(e) {\n        e.preventDefault(); //should prevent submit, and continue below?\n        return false;\n    }\n\n    submitForm = (e) =>{\n        const query = e.target.closest('.search-form').children[0].value;\n\n        if (query.length >0) {\n            this.searchMovies(query, this.state.startPage, this.state.totalPages, this.state.totalResults, this.state.movies);\n        }\n    };\n\n    async searchMovies(searchQuery, currentPage, totalPages, totalResults, moviesArray) {\n        const movies = await axios\n            .get(url_search, {\n                params: {\n                    'api_key': api_key,\n                    'language': 'ru-RU',\n                    'include_adult': 'false',\n                    'page': currentPage,\n                    'query': searchQuery\n                }\n            })\n            .then(films => films.data )\n            .catch(error => this.setState({ error: true }));\n\n        const arr=[];\n        for (let i=1; i <= movies.total_pages; i++) {\n            arr.push(i);\n        }\n\n        this.setState({\n            query: searchQuery,\n            startPage: currentPage,\n            totalPages: movies.total_pages,\n            totalResults: movies.total_results,\n            pages: arr,\n            movies: movies.results\n        });\n\n    }\n\n    changePage = (e) => {\n        e.preventDefault();\n\n        const clickedPage = e.target;\n        console.log(clickedPage);\n        const activePage = document.querySelector('.movie-navbar-page_active');\n\n        if( clickedPage ) {\n            activePage && activePage.classList.remove('movie-navbar-page_active');\n            clickedPage.classList.add('movie-navbar-page_active');\n        }\n\n        const currentPage = Number(clickedPage.innerText);\n\n        this.searchMovies(this.state.query, currentPage, this.state.totalPages, this.state.totalResults, this.state.movies);\n        this.setState({\n            startPage: currentPage\n        });\n    };\n\n    render() {\n        const infoMessage = this.state.error ? <p className=\"App-error\">Movies can't be loaded on this page</p> : '';\n\n        return (\n            <div>\n                <Header\n                    formSubmitHandler = {this.formSubmitHandler}\n                    submitForm = {this.submitForm}\n                />\n                 <div className={ this.state.query.length === 0 ? \"App-content\" : \"App-content_clean\" }>\n                    {this.state.query ? <MovieList\n                                            query= {this.state.query}\n                                            currentPage= {this.state.startPage}\n                                            totalPages = {this.state.totalPages}\n                                            totalResults = {this.state.totalResults}\n                                            pages={this.state.pages}\n                                            movies={this.state.movies}\n                                            changePage={this.changePage}\n                                            /> : infoMessage}\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}