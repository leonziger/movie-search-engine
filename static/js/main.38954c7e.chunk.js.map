{"version":3,"sources":["components/SearchForm/SearchForm.js","components/Header/Header.js","components/MovieList/MovieNavBar/MovieNavBar.js","components/MovieList/MovieItem/MovieItem.js","components/MovieList/MovieList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","console","log","this","props","className","onSubmit","formSubmitHandler","TextField","label","name","color","id","variant","fullWidth","value","query","onChange","handleChange","Button","onClick","submitForm","React","Component","Header","AppBar","position","Typography","component","href","MovieNavBar","totalResults","totalPages","step","currentPage","updatePrevPagesRange","pages","map","page","key","changePage","updateNextPagesRange","MovieItem","decodeGenres","array","cuttedItems","forEach","item","state","genres","element","ru_name","toLowerCase","slice","alt","src","movie","backdrop_path","poster_path","title","isNaN","release_date","Date","getFullYear","genre_ids","length","overview","MovieList","Container","data","startPage","nextPages","movies","Footer","App","searchMovies","e","preventDefault","clickedPage","target","activePage","document","querySelector","classList","remove","add","Number","innerText","setState","prevPagesRange","showPages","nextPagesRange","currentShowPage","totalShowPages","searchQuery","moviesArray","axios","get","params","then","films","catch","error","arr","total_pages","i","push","Math","ceil","total_results","results","mass","modulo","infoMessage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.38954c7e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport './SearchForm.css';\r\n\r\nclass SearchForm extends React.Component {\r\n\r\n    render() {\r\n        console.log('SearchForm =', this.props);\r\n\r\n        return (\r\n            <form className=\"search-form\" onSubmit={this.props.formSubmitHandler}>\r\n                <TextField\r\n                    label=\"Поиск фильма\"\r\n                    name=\"film\"\r\n                    color=\"primary\"\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    fullWidth={true}\r\n                    value={this.props.query}\r\n                    onChange={this.props.handleChange}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.props.submitForm}>\r\n                    Поиск\r\n                </Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport './Header.css';\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        console.log('Header', this);\r\n        return (\r\n            <AppBar position=\"fixed\">\r\n                <div className=\"header\">\r\n                    <div className=\"container\">\r\n                        <Typography variant=\"h1\" component=\"h2\">\r\n                            <a className=\"header-title\" href=\"/\">Movie Search Engine</a>\r\n                        </Typography>\r\n                        <SearchForm\r\n                            query={this.props.query}\r\n                            onChange = {this.props.handleChange}\r\n                            formSubmitHandler={this.props.formSubmitHandler}\r\n                            submitForm={this.props.submitForm}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AppBar>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './MovieNavBar.css';\r\n\r\nclass MovieNavBar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"movie-search-result\">По запросу \"{this.props.query}\" найдено {this.props.totalResults} результатов ({this.props.totalPages} страниц)</div>\r\n                <div className=\"movie-navbar\">\r\n\r\n                    {\r\n                        this.props.totalPages > this.props.step && this.props.currentPage > this.props.step\r\n                        ? <div className=\"movie-navbar-buttons\"><button className=\"movie-navbar-button prev-button\" onClick={this.props.updatePrevPagesRange}>пред {this.props.step} стр.</button></div>\r\n                        : <div className=\"movie-navbar-buttons\"><div> Страницы: </div></div>\r\n                    }\r\n\r\n                    <div className=\"movie-navbar-pages\">{\r\n                        this.props.pages.map(\r\n                            page =>\r\n                                page === this.props.currentPage\r\n                                ?\r\n                                    <div className=\"movie-navbar-page movie-navbar-page_active\" key={page}>{page}</div>\r\n                                :\r\n                                    <div className=\"movie-navbar-page\" key={page} onClick={this.props.changePage}>{page}</div>\r\n                        )}\r\n                    </div>\r\n                    {\r\n                        this.props.totalPages > this.props.step\r\n                            ?\r\n                                <div className=\"movie-navbar-buttons\">\r\n                                    <button className=\"movie-navbar-button next-button\" onClick={this.props.updateNextPagesRange}>след {this.props.step} стр.</button>\r\n                                </div>\r\n                            : ''\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieNavBar;","import React from \"react\";\r\nimport './MovieItem.css';\r\n\r\nclass MovieItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genres : [\r\n                {\r\n                    \"id\": 28,\r\n                    \"name\": \"Action\",\r\n                    \"ru_name\": \"Экшн\"\r\n                },\r\n                {\r\n                    \"id\": 12,\r\n                    \"name\": \"Adventure\",\r\n                    \"ru_name\": \"Приключения\"\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"name\": \"Animation\",\r\n                    \"ru_name\": \"Анимация\"\r\n                },\r\n                {\r\n                    \"id\": 35,\r\n                    \"name\": \"Comedy\",\r\n                    \"ru_name\": \"Комедия\"\r\n                },\r\n                {\r\n                    \"id\": 80,\r\n                    \"name\": \"Crime\",\r\n                    \"ru_name\": \"Криминал\"\r\n                },\r\n                {\r\n                    \"id\": 99,\r\n                    \"name\": \"Documentary\",\r\n                    \"ru_name\": \"Документальный\"\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"name\": \"Drama\",\r\n                    \"ru_name\": \"Драма\"\r\n                },\r\n                {\r\n                    \"id\": 10751,\r\n                    \"name\": \"Family\",\r\n                    \"ru_name\": \"Семейный\"\r\n                },\r\n                {\r\n                    \"id\": 14,\r\n                    \"name\": \"Fantasy\",\r\n                    \"ru_name\": \"Фентези\"\r\n                },\r\n                {\r\n                    \"id\": 36,\r\n                    \"name\": \"History\",\r\n                    \"ru_name\": \"Исторический\"\r\n                },\r\n                {\r\n                    \"id\": 27,\r\n                    \"name\": \"Horror\",\r\n                    \"ru_name\": \"Ужасы\"\r\n                },\r\n                {\r\n                    \"id\": 10402,\r\n                    \"name\": \"Music\",\r\n                    \"ru_name\": \"Музыкальный\"\r\n                },\r\n                {\r\n                    \"id\": 9648,\r\n                    \"name\": \"Mystery\",\r\n                    \"ru_name\": \"Мистика\"\r\n                },\r\n                {\r\n                    \"id\": 10749,\r\n                    \"name\": \"Romance\",\r\n                    \"ru_name\": \"Романтический\"\r\n                },\r\n                {\r\n                    \"id\": 878,\r\n                    \"name\": \"Science Fiction\",\r\n                    \"ru_name\": \"Научная фантастика\"\r\n                },\r\n                {\r\n                    \"id\": 10770,\r\n                    \"name\": \"TV Movie\",\r\n                    \"ru_name\": \"телефильм\"\r\n                },\r\n                {\r\n                    \"id\": 53,\r\n                    \"name\": \"Thriller\",\r\n                    \"ru_name\": \"триллер\"\r\n                },\r\n                {\r\n                    \"id\": 10752,\r\n                    \"name\": \"War\",\r\n                    \"ru_name\": \"Военный\"\r\n                },\r\n                {\r\n                    \"id\": 37,\r\n                    \"name\": \"Western\",\r\n                    \"ru_name\": \"Вестерн\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    decodeGenres = (array) => {\r\n        let items = '', cuttedItems = '';\r\n        array.forEach((item) => {\r\n            this.state.genres.forEach((element)=>{\r\n                if (element.id === item ) {\r\n                    cuttedItems += element.ru_name.toLowerCase() + ', ';\r\n                }\r\n            });\r\n        });\r\n        items = cuttedItems.slice(0, -2);\r\n        return items;\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col-lg-3 col-md-4 col-sm-6 card\">\r\n\r\n                <div className=\"card-img\">\r\n                    <img\r\n                        className=\"card-img-top\"\r\n                        alt=\"\"\r\n                        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${this.props.movie.backdrop_path || this.props.movie.poster_path}`}\r\n                    />\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">{this.props.movie.title}\r\n                        { isNaN(this.props.movie.release_date) ? \" (\" + new Date(this.props.movie.release_date).getFullYear()+\")\" : '' }\r\n                    </div>\r\n                    {this.props.movie.genre_ids.length>0 ? <div className=\"card-genres\"><b>Жанр:&nbsp;</b>{this.decodeGenres(this.props.movie.genre_ids)}</div> : ''}\r\n                    <div className=\"card-overview\">{this.props.movie.overview}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport MovieNavBar from \"./MovieNavBar/MovieNavBar\";\r\nimport MovieItem from \"./MovieItem/MovieItem\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass MovieList extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container>\r\n                {this.props.data.state.totalResults > 0\r\n                    ? <div>\r\n                        <MovieNavBar\r\n                            query={this.props.data.state.query}\r\n                            currentPage={this.props.data.state.startPage}\r\n                            totalPages={this.props.data.state.totalPages}\r\n                            totalResults={this.props.data.state.totalResults}\r\n                            step={this.props.data.state.step}\r\n                            pages={this.props.data.state.totalPages <= this.props.data.state.step ? this.props.data.state.pages : this.props.data.state.nextPages}\r\n                            changePage={this.props.data.changePage}\r\n                            updatePrevPagesRange = {this.props.data.updatePrevPagesRange}\r\n                            updateNextPagesRange = {this.props.data.updateNextPagesRange}\r\n                        />\r\n                        <div className=\"row\">\r\n                            {this.props.data.state.movies.map(movie =>\r\n                                <MovieItem key={movie.id} movie={movie}/>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"movie-search-nothing\">По данному запросу ничего не найдено</div>\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container footer-copy\">Movie Search Engine. Copyright 2020.</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport MovieList from './components/MovieList/MovieList';\nimport Footer from './components/Footer/Footer';\nimport axios from \"axios\";\nimport 'typeface-roboto';\n\nconst api_key = 'ee0f05a0f4bb56e4353f24db8f4f30ef';\nconst url_search = \"https://api.themoviedb.org/3/search/movie\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            query:'battle', //поисковой запрос в API\n            startPage: 1, //страница, с которой начинает выполянться запрос\n            totalPages: 1,  //найдено страниц в API\n            totalResults: 0, //найдено результатов в API\n            step: 8,\n            totalShowPages: 1,\n            currentShowPage: 1,\n            showPages: [],\n            pages : [],\n            nextPages : [],\n            movies: [] //найдено фильмов в API\n        }\n    }\n\n    handleChange(e) {\n        console.log('handleChange =',e.target);\n        this.setState({query: e.target.value});\n    }\n\n    formSubmitHandler(e) {\n        e.preventDefault();\n        return false;\n    };\n\n    submitForm = () => {\n        console.log('submitForm =', this.state.query);\n\n        if (this.state.query.length >0) {\n            this.searchMovies(this.state.query, this.state.startPage, this.state.totalPages, this.state.totalResults, this.state.movies);\n        }\n    };\n\n    // submitForm = (e) =>{\n    //     const query = e.target.closest('.search-form').children[0];\n    //     console.log(query);\n    //\n\n    // };\n\n    async searchMovies(\n        searchQuery, // поисковый запрос в API\n        currentPage, //страница запроса в API\n        totalPages, //найдено страниц\n        totalResults, //найдено результатов\n        moviesArray //найденные, по запросу и номеру страницы, фильмы\n    ) {\n        const movies = await axios\n            .get(url_search, {\n                params: {\n                    'api_key': api_key,\n                    'language': 'ru-RU',\n                    'include_adult': 'false',\n                    'page': currentPage,\n                    'query': searchQuery\n                }\n            })\n            .then(films => films.data)\n            .catch(error => this.setState({error: true}));\n\n        const arr = [];\n        if (movies.total_pages <= this.state.step ) {\n            for (let i = 1; i <= movies.total_pages; i++) arr.push(i);\n        } else {\n            for (let i = 1; i <= this.state.step; i++) arr.push(i);\n        }\n\n        const totalShowPages = Math.ceil(movies.total_pages / this.state.step) + 1;\n\n        this.setState({\n            query: searchQuery,\n            startPage: currentPage,\n            totalPages: movies.total_pages,\n            totalResults: movies.total_results,\n            totalShowPages : totalShowPages,\n            pages: arr,\n            nextPages : this.state.nextPages.length ===0 ? arr : this.state.nextPages,\n            movies: movies.results\n        });\n\n        let mass = [];\n        let modulo = movies.total_pages % this.state.step;\n        let nextPagesRange;\n\n        for (let i = 0; i<totalShowPages-2; i++) {\n            nextPagesRange = this.state.nextPages.map(page =>page + i*this.state.step);\n\n            mass.push({ page: i + 1, pages: nextPagesRange });\n        }\n\n        nextPagesRange = [];\n        for (let i = 0; i < modulo; i++) {\n            nextPagesRange.push(this.state.nextPages[i] + (modulo-1)*this.state.step);\n        }\n\n        mass.push({ page: totalShowPages-1, pages: nextPagesRange })\n\n\n        this.setState({\n            showPages: mass\n        });\n\n    }\n\n    changePage = (e) => {\n        e.preventDefault();\n\n        const clickedPage = e.target;\n        const activePage = document.querySelector('.movie-navbar-page_active');\n\n        if( clickedPage ) {\n            activePage && activePage.classList.remove('movie-navbar-page_active');\n            clickedPage.classList.add('movie-navbar-page_active');\n        }\n\n        const currentPage = Number(clickedPage.innerText);\n\n        this.searchMovies(this.state.query, currentPage, this.state.totalPages, this.state.totalResults, this.state.movies);\n        this.setState({\n            startPage: currentPage\n        });\n    };\n\n    updatePrevPagesRange = () => {\n        const firstPage = this.state.pages[0];\n        if ( firstPage >1 ) {\n            const prevPagesRange = this.state.nextPages.map(page => page - 10);\n\n            //this.searchMovies(this.state.searchQuery, this.state.currentPage, this.state.totalPages, this.state.totalResults, this.state.movies);\n            this.setState({\n                nextPages : prevPagesRange\n            });\n        }\n    };\n\n    updateNextPagesRange = () => {\n        console.log(this.state.showPages);\n        let currentShowPage = this.state.currentShowPage;\n        let totalShowPages = this.state.totalShowPages;\n        console.log('totalShowPages = ', totalShowPages);\n        console.log('currentShowPage = ', currentShowPage);\n        currentShowPage++;\n        let nextPagesRange;\n\n        if (currentShowPage > 1 && currentShowPage < totalShowPages-1) {\n            nextPagesRange = this.state.nextPages.map(page => page + this.state.step);\n\n            console.log(this.state.nextPages);\n            console.log(nextPagesRange);\n\n            this.setState({\n                nextPages : nextPagesRange,\n                currentShowPage: currentShowPage\n            });\n        } else {\n\n        }\n\n\n\n        this.searchMovies(this.state.query, nextPagesRange[0], this.state.totalPages, this.state.totalResults, this.state.movies);\n\n    };\n\n    render() {\n        const infoMessage = this.state.error ? <p className=\"App-error\">Movies can't be loaded on this page</p> : '';\n\n        return (\n            <div>\n                <Header\n                    query={this.state.query}\n                    handleChange = {this.handleChange}\n                    formSubmitHandler = {this.formSubmitHandler}\n                    submitForm = {this.submitForm}\n                />\n                 <div className={ this.state.query.length === 0 ? \"App-content\" : \"App-content_clean\" }>\n                    {this.state.query ? <MovieList data = {this}/> : infoMessage}\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}