{"version":3,"sources":["components/Navbar/Navbar.js","components/Header/Header.js","components/MovieList/MovieItem/MovieItem.js","components/MovieList/MovieList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","this","props","pages","map","page","key","onClick","changePage","updatePrevPagesRange","updateNextPagesRange","React","Component","Header","MovieItem","decodeGenres","array","cuttedItems","forEach","item","state","genres","element","id","ru_name","toLowerCase","slice","alt","src","movie","backdrop_path","poster_path","title","Date","release_date","getFullYear","genre_ids","overview","MovieList","movies","Footer","App","e","preventDefault","clickedPage","target","activePage","document","querySelector","classList","remove","add","currentPage","Number","innerText","fetchMovies","setState","startPage","prevPagesRange","nextPagesRange","axios","get","params","then","films","data","results","catch","error","infoMessage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c7cf8da4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"navbar\">\r\n\r\n                    <span className=\"navbar-title\">Pages:</span> {\r\n                        this.props.pages.map(\r\n                            page =>\r\n                                <div className=\"navbar-page\" key={page}\r\n                                     onClick={this.props.changePage}\r\n                                >\r\n                                    {page}\r\n                                </div>\r\n\r\n                        )}\r\n\r\n                </div>\r\n                <div className=\"navbar-buttons\">\r\n                    <button className=\"navbar-button prev-button\" onClick={this.props.updatePrevPagesRange}>Prev 10 pages</button>\r\n                    <button className=\"navbar-button next-button\" onClick={this.props.updateNextPagesRange}>Next 10 pages</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport './Header.css';\r\nimport Navbar from './../Navbar/Navbar';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"container\">\r\n                    <div className=\"header-title\">Movie Search Engine</div>\r\n                    <Navbar\r\n                        pages={this.props.pages}\r\n                        changePage={this.props.changePage}\r\n                        updatePrevPagesRange={this.props.updatePrevPagesRange}\r\n                        updateNextPagesRange={this.props.updateNextPagesRange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './MovieItem.css';\r\n\r\nclass MovieItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genres : [\r\n                {\r\n                    \"id\": 28,\r\n                    \"name\": \"Action\",\r\n                    \"ru_name\": \"Экшн\"\r\n                },\r\n                {\r\n                    \"id\": 12,\r\n                    \"name\": \"Adventure\",\r\n                    \"ru_name\": \"Приключения\"\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"name\": \"Animation\",\r\n                    \"ru_name\": \"Анимация\"\r\n                },\r\n                {\r\n                    \"id\": 35,\r\n                    \"name\": \"Comedy\",\r\n                    \"ru_name\": \"Комедия\"\r\n                },\r\n                {\r\n                    \"id\": 80,\r\n                    \"name\": \"Crime\",\r\n                    \"ru_name\": \"Криминал\"\r\n                },\r\n                {\r\n                    \"id\": 99,\r\n                    \"name\": \"Documentary\",\r\n                    \"ru_name\": \"Документальный ф-м\"\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"name\": \"Drama\",\r\n                    \"ru_name\": \"Драма\"\r\n                },\r\n                {\r\n                    \"id\": 10751,\r\n                    \"name\": \"Family\",\r\n                    \"ru_name\": \"Семейный ф-м\"\r\n                },\r\n                {\r\n                    \"id\": 14,\r\n                    \"name\": \"Fantasy\",\r\n                    \"ru_name\": \"Фентези\"\r\n                },\r\n                {\r\n                    \"id\": 36,\r\n                    \"name\": \"History\",\r\n                    \"ru_name\": \"Исторический ф-м\"\r\n                },\r\n                {\r\n                    \"id\": 27,\r\n                    \"name\": \"Horror\",\r\n                    \"ru_name\": \"Ужасы\"\r\n                },\r\n                {\r\n                    \"id\": 10402,\r\n                    \"name\": \"Music\",\r\n                    \"ru_name\": \"Музыкальный ф-м\"\r\n                },\r\n                {\r\n                    \"id\": 9648,\r\n                    \"name\": \"Mystery\",\r\n                    \"ru_name\": \"Мистика\"\r\n                },\r\n                {\r\n                    \"id\": 10749,\r\n                    \"name\": \"Romance\",\r\n                    \"ru_name\": \"Романтический ф-м\"\r\n                },\r\n                {\r\n                    \"id\": 878,\r\n                    \"name\": \"Science Fiction\",\r\n                    \"ru_name\": \"Научная фантастика\"\r\n                },\r\n                {\r\n                    \"id\": 10770,\r\n                    \"name\": \"TV Movie\",\r\n                    \"ru_name\": \"телефильм\"\r\n                },\r\n                {\r\n                    \"id\": 53,\r\n                    \"name\": \"Thriller\",\r\n                    \"ru_name\": \"триллер\"\r\n                },\r\n                {\r\n                    \"id\": 10752,\r\n                    \"name\": \"War\",\r\n                    \"ru_name\": \"Военный ф-м\"\r\n                },\r\n                {\r\n                    \"id\": 37,\r\n                    \"name\": \"Western\",\r\n                    \"ru_name\": \"Вестерн\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    decodeGenres = (array) => {\r\n        let items = '', cuttedItems = '';\r\n        array.forEach((item) => {\r\n            this.state.genres.forEach((element)=>{\r\n                if (element.id === item ) {\r\n                    cuttedItems += element.ru_name.toLowerCase() + ', ';\r\n                }\r\n            });\r\n        });\r\n        items = cuttedItems.slice(0, -2);\r\n        return items;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4 col-sm-6 card\">\r\n\r\n                <img\r\n                    className=\"card-img-top\"\r\n                    alt=\"\"\r\n                    src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${this.props.movie.backdrop_path || this.props.movie.poster_path}`}\r\n                />\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">{this.props.movie.title} ({new Date(this.props.movie.release_date).getFullYear()})\r\n                    </div>\r\n                    <div className=\"card-genres\"><b>Жанр:</b> {\r\n                        this.props.movie.genre_ids === false ? '' : this.decodeGenres(this.props.movie.genre_ids)\r\n                    }</div>\r\n                    <div className=\"card-overview\">{this.props.movie.overview}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport MovieItem from \"./MovieItem/MovieItem\";\r\n\r\nclass MovieList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {this.props.movies.map(movie =>\r\n                        <MovieItem key={movie.id} movie={movie} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container footer-copy\">Movie Search Engine. Copyright 2020.</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport MovieList from './components/MovieList/MovieList';\nimport Footer from './components/Footer/Footer';\nimport axios from \"axios\";\n\nconst api_key = 'ee0f05a0f4bb56e4353f24db8f4f30ef';\nconst url_discover = \"https://api.themoviedb.org/3/discover/movie\";\n//const url_search = \"https://api.themoviedb.org/3/search/movie\";\n//https://api.themoviedb.org/3/search/movie?api_key=ee0f05a0f4bb56e4353f24db8f4f30ef&language=en-US&page=1&include_adult=false&query=Batman\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            startPage: 1,\n            pages : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n            movies: []\n        }\n    }\n\n    async fetchMovies(page) {\n\n        const movies = await axios\n            .get(url_discover, {\n                params: {\n                    'api_key': api_key,\n                    'language': 'ru-RU',\n                    'sort_by': 'popularity.desc',\n                    'include_adult': 'false',\n                    'include_video': 'false',\n                    'primary_release_date.gte': '1900-01-01',\n                    'primary_release_date.lte': '2020-01-01',\n                    'page': page\n                }\n            })\n            .then(films => films.data.results )\n            .catch(error => this.setState({ error: true }));\n\n        this.setState({\n            movies: movies\n        });\n\n        // const firstPage = document.querySelector('div.navbar-page:nth-child(2)');\n        // if( firstPage ) {\n        //     firstPage.classList.add('navbar-page_active');\n        // }\n    }\n\n    changePage = (e) => {\n        e.preventDefault();\n\n        const clickedPage = e.target;\n        const activePage = document.querySelector('.navbar-page_active');\n\n        if( clickedPage ) {\n            activePage && activePage.classList.remove('navbar-page_active');\n            clickedPage.classList.add('navbar-page_active');\n        }\n\n        const currentPage = Number(clickedPage.innerText);\n\n        this.fetchMovies(currentPage);\n        this.setState({\n            startPage: currentPage\n        });\n    };\n\n    updatePrevPagesRange = () => {\n        const firstPage = this.state.pages[0];\n        if ( firstPage >1 ) {\n            const prevPagesRange = this.state.pages.map(page => page - 10);\n\n            this.fetchMovies(prevPagesRange[0]);\n            this.setState({\n                pages : prevPagesRange\n            });\n        }\n    };\n\n    updateNextPagesRange = () => {\n        const nextPagesRange = this.state.pages.map(page => page + 10);\n\n        this.fetchMovies(nextPagesRange[0]);\n        this.setState({\n            pages : nextPagesRange\n        });\n    };\n\n    componentDidMount() {\n        this.fetchMovies(this.state.startPage);\n    };\n\n    render() {\n        const infoMessage = this.state.error ? <p className=\"App-error\">Movies can't be loaded on this page</p> : 'Loading...';\n\n        return (\n            <div>\n                <Header\n                    pages={this.state.pages}\n                    changePage={this.changePage}\n                    updatePrevPagesRange={this.updatePrevPagesRange}\n                    updateNextPagesRange={this.updateNextPagesRange}\n                />\n                {this.state.movies ? <MovieList movies={this.state.movies}/> : infoMessage}\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}